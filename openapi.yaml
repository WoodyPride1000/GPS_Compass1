openapi: 3.0.0
info:
  title: GPS Compass API
  version: 1.0.0
  description: API for accessing GPS/IMU data and system controls of the GPS Compass application.
servers:
  - url: http://localhost:5000
    description: Local development server

# セキュリティ定義
security:
  - ApiKeyAuth: [] # 全てのエンドポイントに適用する場合

components:
  securitySchemes:
    ApiKeyAuth:
      type: apiKey
      in: header
      name: X-API-KEY
      description: API Key required for authentication. Set in config.ini and index.html.

  schemas:
    GpsData:
      type: object
      properties:
        lat:
          type: number
          format: float
          description: Latitude (degrees) of the base station.
          example: 35.681236
        lon:
          type: number
          format: float
          description: Longitude (degrees) of the base station.
          example: 139.767125
        hdop_base:
          type: number
          format: float
          description: Horizontal Dilution of Precision for base station.
          example: 0.85
        base_quality:
          type: integer
          description: GPS quality indicator for base station (e.g., 4 for RTK Fix).
          example: 4
        rover_lat:
          type: number
          format: float
          description: Latitude (degrees) of the rover station.
          example: 35.681240
        rover_lon:
          type: number
          format: float
          description: Longitude (degrees) of the rover station.
          example: 139.767130
        hdop_rover:
          type: number
          format: float
          description: Horizontal Dilution of Precision for rover station.
          example: 0.92
        rover_quality:
          type: integer
          description: GPS quality indicator for rover station (e.g., 4 for RTK Fix).
          example: 4
        heading:
          type: number
          format: float
          description: Fused heading (IMU + GPS), in degrees (0-360).
          example: 45.12
        heading_gps:
          type: number
          format: float
          description: GPS-only calculated heading, in degrees (0-360).
          example: 44.98
        error:
          type: number
          format: float
          description: Baseline error in meters.
          example: 0.035
        distance:
          type: number
          format: float
          description: Baseline distance in meters.
          example: 0.702
        imu:
          type: boolean
          description: IMU status (True if active, False otherwise).
          example: true
        imu_accel_x:
          type: number
          format: float
          description: IMU Accelerometer X-axis raw data.
          example: 0.12345
        imu_accel_y:
          type: number
          format: float
          description: IMU Accelerometer Y-axis raw data.
          example: -0.05678
        imu_accel_z:
          type: number
          format: float
          description: IMU Accelerometer Z-axis raw data.
          example: 9.81234
        imu_gyro_x:
          type: number
          format: float
          description: IMU Gyroscope X-axis raw data.
          example: 0.01234
        imu_gyro_y:
          type: number
          format: float
          description: IMU Gyroscope Y-axis raw data.
          example: -0.00567
        imu_raw_gyro_z:
          type: number
          format: float
          description: IMU Gyroscope Z-axis data (offset applied, moving average).
          example: 0.00015
        gyro_z_offset:
          type: number
          format: float
          description: Calibrated Z-axis gyroscope offset.
          example: -0.00345
        base_connected:
          type: boolean
          description: Base GPS connected status.
          example: true
        rover_connected:
          type: boolean
          description: Rover GPS connected status.
          example: true
        base_port_errors:
          type: integer
          description: Count of base station port errors.
          example: 0
        base_serial_errors:
          type: integer
          description: Count of base station serial communication errors.
          example: 0
        rover_port_errors:
          type: integer
          description: Count of rover station port errors.
          example: 0
        rover_serial_errors:
          type: integer
          description: Count of rover station serial communication errors.
          example: 0
        dummy_mode:
          type: boolean
          description: Indicates if the application is running in dummy data mode.
          example: false
        log_level:
          type: string
          description: Current logging level (e.g., INFO, DEBUG).
          example: INFO

    GraphData:
      type: object
      properties:
        azimuths:
          type: array
          items:
            type: integer
          description: Array of azimuth values (0-359 degrees).
        values:
          type: array
          items:
            type: number
            format: float
          description: Array of IMU Z-axis stability values corresponding to azimuths.

    NmeaData:
      type: object
      properties:
        nmea_lines:
          type: array
          items:
            type: string
          description: Array of raw NMEA sentences.

    CalibrationRequest:
      type: object
      required:
        - action
      properties:
        action:
          type: string
          enum: [start, stop]
          description: Action to perform for IMU calibration.

    CalibrationResponse:
      type: object
      required:
        - status
      properties:
        status:
          type: string
          description: Status of the calibration operation.
          example: Calibration started.
        offset:
          type: number
          format: float
          description: Calculated Z-axis gyroscope offset (present when action is 'stop' and samples are available).
          example: -0.00345

    LogLevelRequest:
      type: object
      required:
        - level
      properties:
        level:
          type: string
          enum: [DEBUG, INFO, WARNING, ERROR, CRITICAL]
          description: New log level to set.
          example: INFO

    LogLevelResponse:
      type: object
      required:
        - status
      properties:
        status:
          type: string
          description: Status of the log level change operation.
          example: Log level set to INFO

    ErrorResponse:
      type: object
      required:
        - error
      properties:
        error:
          type: string
          description: Error message.
          example: Unauthorized

paths:
  /api/position:
    get:
      summary: Get current sensor and fusion data
      description: Retrieves the latest GPS, IMU, and fused heading/error data.
      operationId: getCurrentData
      responses:
        '200':
          description: Latest sensor data
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GpsData'
        '401':
          description: Unauthorized - Invalid or missing API Key
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        'default':
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'

  /api/graph_data:
    get:
      summary: Get IMU azimuth stability graph data
      description: Retrieves data points for the IMU Z-axis stability chart by azimuth.
      operationId: getGraphData
      responses:
        '200':
          description: Latest graph data
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GraphData'
        '401':
          description: Unauthorized - Invalid or missing API Key
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        'default':
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'

  /api/nmea_data:
    get:
      summary: Get raw NMEA data
      description: Retrieves a buffer of the latest raw NMEA sentences.
      operationId: getNmeaData
      responses:
        '200':
          description: Latest NMEA data lines
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NmeaData'
        '401':
          description: Unauthorized - Invalid or missing API Key
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        'default':
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'

  /api/calibrate_imu:
    post:
      summary: Control IMU calibration
      description: Starts or stops the IMU Z-axis gyroscope calibration process.
      operationId: calibrateImu
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CalibrationRequest'
      responses:
        '200':
          description: Calibration status or result
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CalibrationResponse'
        '400':
          description: Invalid action or not in calibration mode
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '401':
          description: Unauthorized - Invalid or missing API Key
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        'default':
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'

  /api/set_log_level:
    post:
      summary: Change application log level
      description: Sets the logging level for the application.
      operationId: setLogLevel
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/LogLevelRequest'
      responses:
        '200':
          description: Log level changed successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LogLevelResponse'
        '400':
          description: Invalid log level provided
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '401':
          description: Unauthorized - Invalid or missing API Key
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        'default':
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
